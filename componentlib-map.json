{"components":{"AnalogRead":{"name":"AnalogRead","description":"Read analog value from pin. Value=[0-1023]","inports":null,"outports":null,"filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/AnalogRead.hpp","id":1,"inPorts":{"trigger":{"type":"all","description":"","id":0},"pin":{"type":"all","description":"","id":1}},"outPorts":{"out":{"type":"all","description":"","id":0}}},"ArduinoUno":{"name":"ArduinoUno","description":"Convenient definition of pins available on Arduino Uno","inports":null,"outports":null,"filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/ArduinoUno.hpp","id":2,"inPorts":{},"outPorts":{"pin0":{"type":"all","description":"","id":0},"pin1":{"type":"all","description":"","id":1},"pin2":{"type":"all","description":"","id":2},"pin3":{"type":"all","description":"","id":3},"pin4":{"type":"all","description":"","id":4},"pin5":{"type":"all","description":"","id":5},"pin6":{"type":"all","description":"","id":6},"pin7":{"type":"all","description":"","id":7},"pin8":{"type":"all","description":"","id":8},"pin9":{"type":"all","description":"","id":9},"pin10":{"type":"all","description":"","id":10},"pin11":{"type":"all","description":"","id":11},"pin12":{"type":"all","description":"","id":12},"pin13":{"type":"all","description":"","id":13},"pina0":{"type":"all","description":"","id":14},"pina1":{"type":"all","description":"","id":15},"pina2":{"type":"all","description":"","id":16},"pina3":{"type":"all","description":"","id":17},"pina4":{"type":"all","description":"","id":18},"pina5":{"type":"all","description":"","id":19}}},"BooleanAnd":{"name":"BooleanAnd","description":"Emits true if @a AND @b is true, else false","inports":null,"outports":null,"type":"pure2","filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/BooleanAnd.hpp","id":3,"inPorts":{"a":{"ctype":"bool","type":"all","description":"","id":0,"name":"a"},"b":{"ctype":"bool","type":"all","description":"","id":1}},"outPorts":{"out":{"type":"all","description":"","id":0}}},"BooleanOr":{"name":"BooleanOr","description":"Emits true if either @a OR @b is true, else false","inports":null,"outports":null,"type":"pure2","filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/BooleanOr.hpp","id":4,"inPorts":{"a":{"ctype":"bool","type":"all","description":"","id":0,"name":"a"},"b":{"ctype":"bool","type":"all","description":"","id":1}},"outPorts":{"out":{"type":"all","description":"","id":0}}},"BreakBeforeMake":{"name":"BreakBeforeMake","description":"Break-before-make switch logic. Monitor ports must be connected to form a feedback loop from what outputs are connected to","inports":null,"outports":null,"filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/BreakBeforeMake.hpp","id":5,"inPorts":{"in":{"type":"all","description":"","id":0},"monitor1":{"type":"all","description":"","id":1},"monitor2":{"type":"all","description":"","id":2}},"outPorts":{"out1":{"type":"all","description":"","id":0},"out2":{"type":"all","description":"","id":1}}},"Constrain":{"name":"Constrain","description":"Constraina a number within a the range [@lower,@upper]","inports":null,"outports":null,"filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/Constrain.hpp","id":6,"inPorts":{"in":{"type":"all","description":"","id":0},"lower":{"type":"all","description":"","id":1},"upper":{"type":"all","description":"","id":2}},"outPorts":{"out":{"type":"all","description":"","id":0}}},"Count":{"name":"Count","description":"Count upwards from 0, with step 1","inports":null,"outports":null,"filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/Count.hpp","id":7,"inPorts":{"in":{"type":"all","description":"","id":0},"reset":{"type":"all","description":"","id":1}},"outPorts":{"out":{"type":"all","description":"","id":0}}},"DigitalRead":{"name":"DigitalRead","description":"Read a boolean value from pin. Value is read on @trigger","inports":null,"outports":null,"filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/DigitalRead.hpp","id":8,"inPorts":{"trigger":{"type":"all","description":"","id":0},"pin":{"type":"all","description":"","id":1},"pullup":{"type":"all","description":"","id":2}},"outPorts":{"out":{"type":"all","description":"","id":0}}},"DigitalWrite":{"name":"DigitalWrite","description":"Write a boolean value to pin","inports":null,"outports":null,"filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/DigitalWrite.hpp","id":9,"inPorts":{"in":{"type":"all","description":"","id":0},"pin":{"type":"all","description":"","id":1}},"outPorts":{"out":{"type":"all","description":"","id":0}}},"Forward":{"name":"Forward","description":"Forward a packet from input to output","inports":null,"outports":null,"filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/Forward.hpp","id":10,"inPorts":{"in":{"type":"all","description":"","id":0}},"outPorts":{"out":{"type":"all","description":"","id":0}}},"Gate":{"name":"Gate","description":"Pass packets from @in to @out only if @enable is true","inports":null,"outports":null,"filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/Gate.hpp","id":11,"inPorts":{"in":{"type":"all","description":"","id":0},"enable":{"type":"all","description":"","id":1}},"outPorts":{"out":{"type":"all","description":"","id":0}}},"HysteresisLatch":{"name":"HysteresisLatch","description":"Emit true if @in < @highthreshold, false if @in < @lowthreshold, else keep previous state","inports":null,"outports":null,"filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/HysteresisLatch.hpp","id":12,"inPorts":{"in":{"type":"all","description":"","id":0},"lowthreshold":{"type":"all","description":"","id":1},"highthreshold":{"type":"all","description":"","id":2}},"outPorts":{"out":{"type":"all","description":"","id":0}}},"InvertBoolean":{"name":"InvertBoolean","description":"Invert incoming boolean value. Logical equivalent: NOT","inports":null,"outports":null,"filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/InvertBoolean.hpp","id":13,"inPorts":{"in":{"type":"all","description":"","id":0}},"outPorts":{"out":{"type":"all","description":"","id":0}}},"LedMatrixMax":{"name":"LedMatrixMax","description":"Set characters on MAX7219 display","inports":null,"outports":null,"filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/LedMatrixMax.hpp","id":14,"inPorts":{"in":{"type":"all","description":"","id":0},"pincs":{"type":"all","description":"","id":1},"pindin":{"type":"all","description":"","id":2},"pinclk":{"type":"all","description":"","id":3}},"outPorts":{"out":{"type":"all","description":"","id":0}}},"MapLinear":{"name":"MapLinear","description":"Map the integer @in from range [@inmin,@inmax] to [@outmin,@outmax]","inports":null,"outports":null,"filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/MapLinear.hpp","id":15,"inPorts":{"in":{"type":"all","description":"","id":0},"inmin":{"type":"all","description":"","id":1},"inmax":{"type":"all","description":"","id":2},"outmin":{"type":"all","description":"","id":3},"outmax":{"type":"all","description":"","id":4}},"outPorts":{"out":{"type":"all","description":"","id":0}}},"Max":{"name":"Max","description":"Emits maximum value of @in and @threshold","inports":null,"outports":null,"type":"pure2","filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/Max.hpp","id":16,"inPorts":{"in":{"ctype":"long","type":"all","description":"","id":0,"name":"in"},"threshold":{"ctype":"long","type":"all","description":"","id":1}},"outPorts":{"out":{"type":"all","description":"","id":0}}},"Min":{"name":"Min","description":"Emits minimum value of @in and @threshold","inports":null,"outports":null,"type":"pure2","filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/Min.hpp","id":17,"inPorts":{"in":{"ctype":"long","type":"all","description":"","id":0,"name":"in"},"threshold":{"ctype":"long","type":"all","description":"","id":1}},"outPorts":{"out":{"type":"all","description":"","id":0}}},"MonitorPin":{"name":"MonitorPin","description":"Emit a boolean value each time a pin changes state. Note: only pin 2/3 on Arduino Uno/Nano supported.","inports":null,"outports":null,"filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/MonitorPin.hpp","id":18,"inPorts":{"pin":{"type":"all","description":"","id":0}},"outPorts":{"out":{"type":"all","description":"","id":0}}},"NumberEquals":{"name":"NumberEquals","description":"Emits true if @a EQUALS @b is true, else false","inports":null,"outports":null,"type":"pure2","filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/NumberEquals.hpp","id":19,"inPorts":{"a":{"ctype":"long","type":"all","description":"","id":0,"name":"a"},"b":{"ctype":"long","type":"all","description":"","id":1}},"outPorts":{"out":{"type":"all","description":"","id":0}}},"PwmWrite":{"name":"PwmWrite","description":"Set duty cycle [0-100%] of PWM pin","inports":null,"outports":null,"filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/PwmWrite.hpp","id":20,"inPorts":{"dutycycle":{"type":"all","description":"","id":0},"pin":{"type":"all","description":"","id":1}},"outPorts":{"out":{"type":"all","description":"","id":0}}},"ReadCapacitivePin":{"name":"ReadCapacitivePin","description":"Emits true if measured capacitance (in iterations) on @pin exceeds @threshold","inports":null,"outports":null,"filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/ReadCapacitivePin.hpp","id":21,"inPorts":{"trigger":{"type":"all","description":"","id":0},"pin":{"type":"all","description":"","id":1},"threshold":{"type":"all","description":"","id":2}},"outPorts":{"out":{"type":"all","description":"","id":0}}},"Route":{"name":"Route","description":"Pass packets to @out from input port number @port","inports":null,"outports":null,"filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/Route.hpp","id":22,"inPorts":{"port":{"type":"all","description":"","id":0},"in1":{"type":"all","description":"","id":1},"in2":{"type":"all","description":"","id":2},"in3":{"type":"all","description":"","id":3},"in4":{"type":"all","description":"","id":4},"in5":{"type":"all","description":"","id":5},"in6":{"type":"all","description":"","id":6},"in7":{"type":"all","description":"","id":7},"in8":{"type":"all","description":"","id":8},"in9":{"type":"all","description":"","id":9}},"outPorts":{"out":{"type":"all","description":"","id":0}}},"SerialIn":{"name":"SerialIn","description":"Emit packets read from serial port (0). Warning: may interfere with MicroFlo UI usage","inports":null,"outports":null,"filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/SerialIn.hpp","id":23,"inPorts":{"in":{"type":"all","description":"","id":0}},"outPorts":{"out":{"type":"all","description":"","id":0}}},"SerialOut":{"name":"SerialOut","description":"Write input packets to serial port (0). Warning: may interfere with MicroFlo UI usage","inports":null,"outports":null,"filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/SerialOut.hpp","id":24,"inPorts":{"in":{"type":"all","description":"","id":0}},"outPorts":{"out":{"type":"all","description":"","id":0}}},"Split":{"name":"Split","description":"Emit incoming packets on all output ports","inports":null,"outports":null,"filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/Split.hpp","id":25,"inPorts":{"in":{"type":"all","description":"","id":0}},"outPorts":{"out1":{"type":"all","description":"","id":0},"out2":{"type":"all","description":"","id":1},"out3":{"type":"all","description":"","id":2},"out4":{"type":"all","description":"","id":3},"out5":{"type":"all","description":"","id":4},"out6":{"type":"all","description":"","id":5},"out7":{"type":"all","description":"","id":6},"out8":{"type":"all","description":"","id":7},"out9":{"type":"all","description":"","id":8}}},"SubGraph":{"name":"SubGraph","description":"Not for normal use. Used internally for handling subgraphs","inports":null,"outports":null,"filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/SubGraph.hpp","id":26,"inPorts":{},"outPorts":{}},"Timer":{"name":"Timer","description":"Emit a packet every @interval milliseconds","inports":null,"outports":null,"filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/Timer.hpp","id":27,"inPorts":{"interval":{"type":"all","description":"","id":0},"reset":{"type":"all","description":"","id":1}},"outPorts":{"out":{"type":"all","description":"","id":0}}},"ToggleBoolean":{"name":"ToggleBoolean","description":"Invert output packet everytime an input packet arrives. Output defaults to false","inports":null,"outports":null,"filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/ToggleBoolean.hpp","id":28,"inPorts":{"in":{"type":"all","description":"","id":0},"reset":{"type":"all","description":"","id":1}},"outPorts":{"out":{"type":"all","description":"","id":0}}},"BoolToInt":{"name":"BoolToInt","description":"Convert boolean input to integer. true->1, false->0","inports":null,"outports":null,"filename":"/home/jon/contrib/code/microflo/node_modules/microflo-core/components/BoolToInt.hpp","id":29,"inPorts":{"in":{"type":"all","description":"","id":0}},"outPorts":{"out":{"type":"all","description":"","id":0}}}}}